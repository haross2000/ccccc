services:
  - type: web
    name: crypto-analysis
    env: python
    region: frankfurt
    plan: free
    buildCommand: |
      # تثبيت المكتبات الأساسية
      apt-get update
      apt-get install -y python3-dev build-essential wget

      # تثبيت numpy أولاً
      pip install numpy==1.26.2

      # تحميل وتثبيت TA-Lib
      wget http://prdownloads.sourceforge.net/ta-lib/ta-lib-0.4.0-src.tar.gz
      tar -xzf ta-lib-0.4.0-src.tar.gz
      cd ta-lib/
      ./configure --prefix=/usr
      make
      make install
      cd ..
      rm -rf ta-lib ta-lib-0.4.0-src.tar.gz

      # تثبيت TA-Lib Python بشكل منفصل
      export TA_LIBRARY_PATH=/usr/lib
      export TA_INCLUDE_PATH=/usr/include
      pip install --no-cache-dir ta-lib==0.4.28
      
      # تثبيت باقي المتطلبات
      pip install -r requirements.txt

      # إنشاء ملف __init__.py في مجلد utils
      echo '"""
      Cryptocurrency Analysis Utilities
      
      This package contains various utilities for cryptocurrency analysis:
      - Data collection
      - Technical analysis
      - Pattern recognition
      - Market analysis
      - Decision making
      - Risk management
      """

      from .data_collector import DataCollector
      from .technical_analyzer import TechnicalAnalyzer
      from .pattern_analyzer import PatternAnalyzer
      from .market_analyzer import MarketAnalyzer
      from .decision_maker import DecisionMaker
      from .risk_management import RiskManager

      __all__ = [
          "DataCollector",
          "TechnicalAnalyzer",
          "PatternAnalyzer",
          "MarketAnalyzer",
          "DecisionMaker",
          "RiskManager"
      ]' > utils/__init__.py

      # نسخ الملفات إلى المجلد الصحيح
      mkdir -p /app
      cp -r . /app/
      cd /app

      # عرض محتويات المجلد
      echo "=== محتويات المجلد /app ==="
      ls -la /app
      echo "=== محتويات مجلد utils ==="
      ls -la /app/utils
      echo "=== محتوى ملف utils/__init__.py ==="
      cat /app/utils/__init__.py
    startCommand: |
      cd /app
      
      # إضافة المسار إلى PYTHONPATH
      export PYTHONPATH=/app:$PYTHONPATH
      
      # عرض المسار وقائمة sys.path
      echo "Current directory: $(pwd)"
      python -c "import sys; print('Python path:', sys.path)"
      
      # تشغيل التطبيق
      python -c "import os; print('Files in current directory:', os.listdir('.')); print('Files in utils:', os.listdir('utils'))" || true
      gunicorn "main:app.server" --timeout 180 --workers 1 --log-level debug
    envVars:
      - key: PYTHON_VERSION
        value: 3.11.0
      - key: TA_LIBRARY_PATH
        value: /usr/lib
      - key: TA_INCLUDE_PATH
        value: /usr/include
      - key: LD_LIBRARY_PATH
        value: /usr/lib
      - key: PYTHONPATH
        value: /app
