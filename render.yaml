services:
  - type: web
    name: crypto-analysis
    env: python
    region: frankfurt
    plan: free
    buildCommand: |
      # تثبيت المكتبات الأساسية
      apt-get update
      apt-get install -y python3-dev build-essential wget

      # تثبيت numpy أولاً
      pip install numpy==1.26.2

      # تحميل وتثبيت TA-Lib
      wget http://prdownloads.sourceforge.net/ta-lib/ta-lib-0.4.0-src.tar.gz
      tar -xzf ta-lib-0.4.0-src.tar.gz
      cd ta-lib/
      ./configure --prefix=/usr
      make
      make install
      cd ..
      rm -rf ta-lib ta-lib-0.4.0-src.tar.gz

      # تثبيت TA-Lib Python بشكل منفصل
      export TA_LIBRARY_PATH=/usr/lib
      export TA_INCLUDE_PATH=/usr/include
      pip install --no-cache-dir ta-lib==0.4.28
      
      # تثبيت باقي المتطلبات
      pip install -r requirements.txt

      # إنشاء ملف wsgi.py
      echo 'import os
import sys

# إضافة المجلد الحالي إلى مسار Python
current_dir = os.path.dirname(os.path.abspath(__file__))
sys.path.insert(0, current_dir)

from main import app

server = app.server' > wsgi.py

      # عرض محتويات المجلد
      echo "=== محتويات المجلد الحالي ==="
      ls -la
    startCommand: |
      # إضافة المسار إلى PYTHONPATH
      export PYTHONPATH=/opt/render/project/src
      
      # عرض المسار وقائمة sys.path
      echo "Current directory: $(pwd)"
      python -c "import sys; print('Python path:', sys.path)"
      
      # تشغيل التطبيق
      cd /opt/render/project/src && gunicorn wsgi:server --timeout 180 --workers 1 --log-level debug
    envVars:
      - key: PYTHON_VERSION
        value: 3.11.0
      - key: TA_LIBRARY_PATH
        value: /usr/lib
      - key: TA_INCLUDE_PATH
        value: /usr/include
      - key: LD_LIBRARY_PATH
        value: /usr/lib
      - key: PYTHONPATH
        value: /opt/render/project/src
